from BirthdayProblem import BirthdayProblem
import json

testFn = lambda args: BirthdayProblem.CLISolver.solve(args.split(" ") + ["-j"])

assemblerFn = lambda inp: json.loads(inp) if(isinstance(inp, str)) else inp

dividerFn = lambda inp: [inp]

testData = [
		['1 -p 1.0 -a', True, { 'd': '1', 'p': '100%', 'results': { 'trivial': {'result': '2'} } }],
		['1 -p 0.0 -a', True, { 'd': '1', 'p': '0%', 'results': { 'trivial': {'result': '1'} } }],
		['1 -p 0.5 -a', True, { 'd': '1', 'p': '50%', 'results': { 'trivial': {'result': '2'} } }],
		['1000000000 -p 0.0000001 -t', True, { 'd': '1000000000 (=10^9)', 'p': '0.00001% (=10^-7)', 'results': { 'taylor': {'result': '15'} } }],
		['1 -n 1 -a', True, { 'd': '1', 'n': '1', 'results': { 'trivial': {'result': '0%'} } }],
		['1 -n 0 -a', True, { 'd': '1', 'n': '0', 'results': { 'trivial': {'result': '0%'} } }],
		['1 -n 2 -a', True, { 'd': '1', 'n': '2', 'results': { 'trivial': {'result': '100%'} } }],
		['69 -p 0.5 -a', True, { 'd': '69', 'p': '50%', 'results': { 'exact': {'result': '11'}, 'taylor': {'result': '10'} } }],
		['83 -p 0.5 -a', True, { 'd': '83', 'p': '50%', 'results': { 'exact': {'result': '12'}, 'taylor': {'result': '11'} } }],
		['1000000000 -p 0.5 -a', True, { 'd': '1000000000 (=10^9)', 'p': '50%', 'results': { 'exact': {'result': '37234'}, 'taylor': {'result': '37233'} } }],
		['366 -n 23 -a', True, { 'd': '366', 'n': '23', 'results': { 'exact': {'result': '≈50.6323011819%'}, 'taylor': {'result': '≈51.4549326419%'}, 'stirling': {'result': '≈50.6315474495%'} } }],
		['366 -p 0.5 -a', True, { 'd': '366', 'p': '50%', 'results': { 'taylor': {'result': '23'}, 'exact': {'result': '23'} } }],
		[
			'6274264876827642864872634872364782634 -n 2376287346287353638 -s -t',
			True,
			{
				'd': '6274264876827642864872634872364782634 (≈6*10^36)',
				'n': '2376287346287353638 (≈2*10^18)',
				'results': {
					'taylor': {'result': '≈36.2366927782%'},
					'stirling': {'result': '≈36.2366927782%'}
				}
			}
		],
		['128 -n 0 -b -s -t', True, { 'd': '2^128', 'n': '2^0', 'results': { 'trivial': {'result': '0%'} } }],
		['128 -n 129 -b -s -t', True, { 'd': '2^128', 'n': '2^129', 'results': { 'trivial': {'result': '100%'} } }],
		['128 -n 64 -b -s -t', True, { 'd': '2^128', 'n': '2^64', 'results': { 'stirling': {'result': '≈39.3469340287%'}, 'taylor': {'result': '≈39.3469340287%'} } }],
		['128 -p 0.5 -b -t', True, { 'd': '2^128', 'p': '50%', 'results': { 'taylor': {'result': '≈2^64.2356168135'} } }],
		[
			'2000000 -n 1000000 -b -s -t',
			True,
			{
				'd': '2^2000000',
				'n': '2^1000000',
				'results': {
					'stirling': {'error': 'needed precision for method exceeds maximum precision'},
					'taylor': {'result': '≈39.3469340287%'}
				}
			}
		],
		['2000000 -p 0.5 -b -t', True, { 'd': '2^2000000', 'p': '50%', 'results': { 'taylor': {'result': '≈2^1000000.2356168135'} } }],
		[
			'8 -n 3 -b -a',
			True,
			{
				'd': '2^8',
				'n': '2^3',
				'results': {
					'exact': {'result': '≈10.4576930892%'},
					'stirling': {'result': '≈10.4567528314%'},
					'taylor': {'result': '≈11.7503097415%' }
				}
			}
		],
		[
			'256 -n 8 -a',
			True,
			{
				'd': '256',
				'n': '8',
				'results': {
					'exact': {'result': '≈10.4576930892%'},
					'stirling': {'result': '≈10.4567528314%'},
					'taylor': {'result': '≈11.7503097415%'}
				}
			}
		],
		[
			'52 -p 0.1 -c -t',
			True,
			{
				'd': '80658175170943878571660636856403766975289505440883277824000000000000 (≈8*10^67)',
				'p': '10%',
				'results': {
					'taylor': {'result': '4122665867622533660736208120290868 (≈4*10^33)'}
				}
			}
		],
		[
			'52 -p 0.5 -c -t',
			True,
			{
				'd': '80658175170943878571660636856403766975289505440883277824000000000000 (≈8*10^67)',
				'p': '50%',
				'results': {
					'taylor': {'result': '10574307231100289363611308602026252 (≈10^34)'}
				}
			}
		],
		[
			'52 -n 10000000000000000000 -c -s -t',
			True,
			{
				'd': '80658175170943878571660636856403766975289505440883277824000000000000 (≈8*10^67)',
				'n': '10000000000000000000 (=10^19)',
				'results': {
					'stirling': {'result': '≈0% (≈6*10^-31)'},
					'taylor': {'result': '≈0% (≈6*10^-31)'}
				}
			}
		],
		[
			'52 -n 10000000000000000000000000000000000 -c -s -t',
			True,
			{
				'd': '80658175170943878571660636856403766975289505440883277824000000000000 (≈8*10^67)',
				'n': '10000000000000000000000000000000000 (=10^34)',
				'results': {
					'stirling': {'result': '≈46.2001746672%'},
					'taylor': {'result': '≈46.2001746672%'}
				}
			}
		],
		[
			'4 -n 18 -b -c -a',
			True,
			{
				'd': '≈2^44.2501404699',
				'n': '2^18',
				'results': {
					'exact': {'result': '≈0.1640861961% (≈2*10^-3)'},
					'stirling': {'result': '≈0.1640861961% (≈2*10^-3)'},
					'taylor': {'result': '≈0.1640868208% (≈2*10^-3)'}
				}
			}
		],
		[
			'16 -n 262144 -c -a',
			True,
			{
				'd': '20922789888000 (≈2*10^13)',
				'n': '262144 (≈3*10^5)',
				'results': {
					'exact': {'result': '≈0.1640861961% (≈2*10^-3)'},
					'stirling': {'result': '≈0.1640861961% (≈2*10^-3)'},
					'taylor': {'result': '≈0.1640868208% (≈2*10^-3)'}
				}
			}
		],
		[
			'20922789888000 -n 262144 -a',
			True,
			{
				'd': '20922789888000 (≈2*10^13)',
				'n': '262144 (≈3*10^5)',
				'results': {
					'exact': {'result': '≈0.1640861961% (≈2*10^-3)'},
					'stirling': {'result': '≈0.1640861961% (≈2*10^-3)'},
					'taylor': {'result': '≈0.1640868208% (≈2*10^-3)'}
				}
			}
		],
		[
			'128 -n 64 -b -c -s -t',
			True,
			{
				'd': '≈2^43065219282621326757565580404980237828911.4871409133',
				'n': '2^64',
				'results': {
					'stirling': {'error': 'd exceeds maximum size and is needed for method'},
					'taylor': {'result': '0%'}
				}
			}
		],
		[
			'1280 -n 640 -b -c -s -t',
			True,
			{
				'd': '≈2^26614275474014559821953787196100807012412948367028783328633986189111799719299525295290069853854877867120534538070982737886888824825850066183609939356930416666755910887266773840385877776851876084664629106697034459995685244418266399190317043076208186461319737435225525519543453247219560088300601118286958869004726993677805799134087110255288245085785541666888810491274634074724367056992419344.3330052449',
				'n': '2^640',
				'results': {
					'stirling': {'error': 'd exceeds maximum size and is needed for method'},
					'taylor': {'result': '0%'}
				}
			}
		],
		[
			'1280 -p 0.5 -b -c -e',
			True,
			{
				'd': '≈2^26614275474014559821953787196100807012412948367028783328633986189111799719299525295290069853854877867120534538070982737886888824825850066183609939356930416666755910887266773840385877776851876084664629106697034459995685244418266399190317043076208186461319737435225525519543453247219560088300601118286958869004726993677805799134087110255288245085785541666888810491274634074724367056992419344.3330052449',
				'p': '50%',
				'results': {
					'exact': {'error': 'd exceeds maximum size and is needed for method'}
				}
			}
		],
		[
			'12800 -n 6400 -b -c -s -t',
			False,
			"dLog exceeds maximum size and is needed to initialize calculations"
		]
]

